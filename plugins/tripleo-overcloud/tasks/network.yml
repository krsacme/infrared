---
- set_fact:
      isolation_file: "network-isolation{{ (install.network.protocol == 'ipv6') | ternary('-v6','') }}.yaml"

# Starting from OSP11, the overcloud deploy deprecated the neutron flags
# and because they should be used even in older releases, there is no reason
# to not do so.
- name: Append the network type
  yedit:
      src: "{{ template_base }}/network/{{ network_environment_file }}"
      update: True
      key: parameter_defaults
      value:
          NeutronNetworkType:
              '{{ install.network.backend }}'

# OSPd7 can not recognize NeutronTunnelTypes option at all
- name: Append the network type
  yedit:
      src: "{{ template_base }}/network/{{ network_environment_file }}"
      update: True
      key: parameter_defaults
      value:
          NeutronTunnelTypes:
              "{{ (install.network.backend) | regex_replace('vlan', '') | regex_replace(',,', ',') | regex_replace(',$', '') | regex_replace('^,', '') }}"
  when: install.version|default(undercloud_version)|openstack_release >= 8

- name: Append the network isolation template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/{{ isolation_file }} \'

- name: Append the network template line for splitstack to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/roles-port-config.yml \'
  when: install.splitstack|default(False)

- name: Append the network environment template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/network/{{ network_environment_file }} \'

- name: Find the controller network template file in deployment files
  vars:
      basename: "controller{{ (install.network.protocol == 'ipv6') | ternary('-v6','') }}.yaml"
  find:
      paths: "{{ template_base }}"
      patterns: "{{ basename }}"
      recurse: yes
  register: controller_path
  when: install.network.dvr

- name: Fail unless 1 file was found
  fail:
      msg:
          error: found multiple controller network templates, or not at all.
          files: "{{ controller_path.files|map(attribute='path')|list }}"
  when:
      - install.network.dvr
      - "{{ controller_path.matched != 1 }}"

- name: Append the bgpvpn template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/neutron-bgpvpn.yaml \'
  when: install.network.bgpvpn

- name: Inject dvr override template
  vars:
      controller_abspath: "{{ controller_path.files[0].path }}"
  template:
      src: dvr-override.yaml.j2
      dest: "{{ template_base }}/network/dvr-override.yaml"
  when: install.network.dvr

- name: Append the dvr template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/neutron-ovs-dvr.yaml \'
  when: install.network.dvr

- name: Append the l2gw template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/neutron-l2gw.yaml \'
  when: install.network.l2gw

- name: Disable l2gw agent
  become: yes
  replace:
      path: "{{ install.heat.templates.basedir }}/environments/neutron-l2gw.yaml"
      regexp: '../puppet/services/neutron-l2gw-agent.yaml'
      replace: 'OS::Heat::None'
  when: install.network.l2gw

- name: Configure several service plugins
  become: yes
  replace:
      path: "{{ install.heat.templates.basedir }}/environments/neutron-l2gw.yaml"
      regexp: '\"networking_l2gw.services.l2gateway.plugin.L2GatewayPlugin\"'
      replace: 'router,qos,trunk,networking_l2gw.services.l2gateway.plugin.L2GatewayPlugin'
  when: install.network.l2gw

- name: Append the octavia template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/services-docker/octavia.yaml \'
  when: install.network.octavia

- name: Install Octavia image
  become: yes
  yum:
      name: octavia-amphora-image
      state: present
  when: install.network.octavia

- name: Append Octavia amphora image path
  yedit:
      src: "{{ template_base }}/network/{{ network_environment_file }}"
      update: True
      key: parameter_defaults
      value:
          OctaviaAmphoraImageFilename: '/usr/share/rhosp-director-images/octavia-amphora.qcow2'
  when: install.network.octavia

- name: Append the network dvr overrides
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/network/dvr-override.yaml \'
  when: install.network.dvr

#### KRS
# This is not working for now, figure out why? Could you because of docker service of ovs-dpdk-agent?
#- name: Append plan-environment file to trigger derive parameters worflow
#  lineinfile:
#      dest: "~/overcloud_deploy.sh"
#      line: '  -p {{ install.heat.templates.basedir }}/plan-samples/plan-environment-derived-params.yaml \'
#  when: install.network.dpdk

- name: Append the host config environment file to configure the kernel args and tuned
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '  -e {{ install.heat.templates.basedir }}/environments/host-config-and-reboot.yaml \'
  when: install.network.dpdk

- name: Append the OVS-DPDK environment file
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '  -e {{ install.heat.templates.basedir }}/environments/services-docker/neutron-ovs-dpdk.yaml \'
  when: install.network.dpdk

- name: Append the OVS-DPDK permissions environments file only for fresh install
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '  -e {{ install.heat.templates.basedir }}/environments/ovs-dpdk-permissions.yaml \'
  when:
    - install.network.dpdk
    - install.upgrade is not defined or not install.upgrade

- name: Create directory for DPDK configs
  file:
    path: "{{ template_base }}/dpdk"
    state: directory
  when: install.network.dpdk

- name: Copy DPDK first-boot environment file
  copy:
      dest: "{{ template_base }}/dpdk/first-boot-dpdk.yaml"
      src: "files/first-boot-dpdk.yaml"
  when: install.network.dpdk

- name: Copy DPDK parameter environment file
  copy:
      dest: "{{ template_base }}/dpdk/config_dpdk.yaml"
      src: "files/config_dpdk.yaml"
  when: install.network.dpdk

- name: Append the OVS-DPDK parameters environment file
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '  -e {{ template_base }}/dpdk/config_dpdk.yaml \'
  when: install.network.dpdk
